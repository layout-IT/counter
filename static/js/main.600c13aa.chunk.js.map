{"version":3,"sources":["App.module.css","bll/reduser.tsx","Counter.tsx","App.tsx","reportWebVitals.ts","bll/store.tsx","index.tsx"],"names":["module","exports","initialState","value","maxValue","startValue","text","Counter","props","dispatch","useDispatch","className","s","wrapper","left","window","top_string","max_value","arrowRed","arrow","top_arrow","onClick","type","bottom_arrow","position_B","position_A","bottom_string","window_button","unSet","set","locStorValue","right","state","red","title","obert","items","inc","op","addNumber","reset","opasity","App","useSelector","counterReduser","useEffect","localStorage","getItem","parseMinValue","JSON","parse","setMinNumberOutOfLocalStorageAC","parseMaxValue","setMaxNumberOutOfLocalStorageAC","resetAc","setItem","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reduser","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.600c13aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1Ub_9\",\"right\":\"App_right__1_PuZ\",\"title\":\"App_title__2sWU3\",\"obert\":\"App_obert__3btd9\",\"items\":\"App_items__1e26s\",\"inc\":\"App_inc__1jHDf\",\"reset\":\"App_reset__1IH0T\",\"red\":\"App_red__CXznE\",\"op\":\"App_op__1FV5v\",\"opasity\":\"App_opasity__1w1Dp\",\"left\":\"App_left__1fxuU\",\"window\":\"App_window__LvrWS\",\"window_button\":\"App_window_button__2GH7Y\",\"set\":\"App_set__x7yTC\",\"unSet\":\"App_unSet__2-9TK\",\"max_value\":\"App_max_value__2QWxY\",\"arrowRed\":\"App_arrowRed__1wnAG\",\"bottom_arrow\":\"App_bottom_arrow__3sqDd\",\"top_arrow\":\"App_top_arrow__SpAvp\",\"arrow\":\"App_arrow__2PytX\",\"position_A\":\"App_position_A__3qUO1\",\"position_B\":\"App_position_B__2lDJc\"};","export const initialState = {\r\n    value: 0,\r\n    maxValue: 0,\r\n    startValue: 0,\r\n    text: false\r\n\r\n}\r\n\r\nexport type initialStateType = typeof initialState\r\nexport type valueActionT = ReturnType<typeof addNumberAc>\r\nexport type resetActionT = ReturnType<typeof resetAc>\r\nexport type addStartValueToIncAT = ReturnType<typeof addStartValueToIncAC>\r\nexport type maxValueUpAT = ReturnType<typeof maxValueUpAC>\r\nexport type maxValueDownAT = ReturnType<typeof maxValueDownAC>\r\nexport type startValueDownAT = ReturnType<typeof startValueDownAC>\r\nexport type startValueUpAT = ReturnType<typeof startValueUpAC>\r\nexport type setMaxNumberOutOfLocalStorageAT = ReturnType<typeof setMaxNumberOutOfLocalStorageAC>\r\nexport type setMinNumberOutOfLocalStorageAT = ReturnType<typeof setMinNumberOutOfLocalStorageAC>\r\nexport type setButtonAT = ReturnType<typeof setButtonAC>\r\n\r\n\r\ntype ReduserActionType = valueActionT |\r\n    resetActionT |\r\n    addStartValueToIncAT |\r\n    maxValueUpAT |\r\n    maxValueDownAT |\r\n    startValueDownAT |\r\n    startValueUpAT |\r\n    setButtonAT |\r\n    setMaxNumberOutOfLocalStorageAT |\r\n    setMinNumberOutOfLocalStorageAT\r\n\r\n\r\nexport function counterReduser(state: initialStateType = initialState, action: ReduserActionType): initialStateType {\r\n    switch (action.type) {\r\n        case \"ADD-NUNBER\" :\r\n            return {...state, value: state.value + 1}\r\n        case \"RESET\" : {\r\n            if (state.value > 0) {\r\n                return {...state, value: state.value = state.startValue}\r\n            }\r\n            return state\r\n        }\r\n        case 'ADD-STAR-VALUE-TO-INC' : {\r\n            if (state.startValue >= 0) {\r\n                return {...state, value: state.value = state.startValue,}\r\n            }\r\n\r\n            return state\r\n        }\r\n        case \"MAX-VALUE-UP\" : {\r\n            return {...state, maxValue: state.maxValue + 1, text: state.text = false}\r\n        }\r\n        case \"MAX-VALUE-DOWN\" : {\r\n            if (state.maxValue - 1 > (state.startValue)) {\r\n                return {...state, maxValue: state.maxValue - 1, text: state.text = false}\r\n\r\n            }\r\n            return state\r\n        }\r\n        case \"START-VALUE-UP\" : {\r\n            if (state.maxValue > state.startValue + 1) {\r\n                return {...state, startValue: state.startValue + 1, text: state.text = false}\r\n\r\n            }\r\n            return state\r\n        }\r\n        case \"START-VALUE-DOWN\" : {\r\n            if (state.maxValue > (state.startValue) - 1) {\r\n                return {...state, startValue: state.startValue - 1, text: state.text = false}\r\n\r\n            }\r\n            return state\r\n        }\r\n        case \"SET-BUTTON\" : {\r\n            return {...state, text: state.text = true, value: state.value = state.startValue}\r\n        }\r\n\r\n        case 'SET-NUMBERS-OUT-OF-LOCAL-STORAGE-MAX-VALUE': {\r\n            return {\r\n                ...state,\r\n                maxValue: action.parseMaxValue\r\n            }\r\n        }\r\n\r\n        case 'SET-NUMBERS-OUT-OF-LOCAL-STORAGE-MIN-VALUE': {\r\n            return {\r\n                ...state,\r\n                startValue: action.parseMinValue\r\n            }\r\n        }\r\n\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addNumberAc = () => {\r\n    return {\r\n        type: \"ADD-NUNBER\"\r\n    } as const\r\n}\r\nexport const resetAc = (startValue: number) => {\r\n    return {\r\n        type: \"RESET\",\r\n        startValue\r\n    } as const\r\n}\r\nexport const addStartValueToIncAC = (startValue: number) => {\r\n    return {\r\n        type: \"ADD-STAR-VALUE-TO-INC\",\r\n        startValue\r\n    } as const\r\n}\r\nexport const maxValueUpAC = () => {\r\n    return {\r\n        type: 'MAX-VALUE-UP'\r\n    } as const\r\n}\r\nexport const maxValueDownAC = () => {\r\n    return {\r\n        type: 'MAX-VALUE-DOWN'\r\n    } as const\r\n}\r\nexport const startValueDownAC = () => {\r\n    return {\r\n        type: 'START-VALUE-DOWN'\r\n    } as const\r\n}\r\nexport const startValueUpAC = () => {\r\n    return {\r\n        type: 'START-VALUE-UP'\r\n    } as const\r\n}\r\nexport const setButtonAC = () => {\r\n    return {\r\n        type: 'SET-BUTTON'\r\n    } as const\r\n}\r\nexport const setMaxNumberOutOfLocalStorageAC = (parseMaxValue: number) => {\r\n    return {\r\n        type: 'SET-NUMBERS-OUT-OF-LOCAL-STORAGE-MAX-VALUE',\r\n        parseMaxValue,\r\n    } as const\r\n}\r\n\r\nexport const setMinNumberOutOfLocalStorageAC = (parseMinValue: number) => {\r\n    return {\r\n        type: 'SET-NUMBERS-OUT-OF-LOCAL-STORAGE-MIN-VALUE',\r\n        parseMinValue,\r\n    } as const\r\n}","import s from './App.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {maxValueDownAC, maxValueUpAC, setButtonAC, startValueDownAC, startValueUpAC} from \"./bll/reduser\";\r\n\r\n\r\nexport type CounterType = {\r\ntext: boolean\r\n    state: number\r\n    addNumber: () => void\r\n    reset: (startValue: number) => void\r\n    locStorValue: () => void\r\n    maxValue: number\r\n    startValue: number\r\n}\r\n\r\nexport const Counter = (props: CounterType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const maxValue = props.maxValue\r\n    const startValue =  props.startValue\r\n\r\n    const text = props.text\r\n\r\n\r\n\r\n\r\n    const maxValueUp = () => {\r\n        dispatch(maxValueUpAC())\r\n    }\r\n\r\n    const maxValueDown = () => {\r\n        dispatch(maxValueDownAC())\r\n    }\r\n\r\n    const startValueUp = () => {\r\n        dispatch(startValueUpAC())\r\n    }\r\n\r\n    const startValueDown = () => {\r\n        dispatch(startValueDownAC())\r\n    }\r\n\r\n    const setButton = () => {\r\n        props.locStorValue()\r\n        if (props.startValue >=0){\r\n            dispatch(setButtonAC())\r\n        }\r\n    }\r\n\r\n    return <div className={s.wrapper}>\r\n\r\n        <div className={s.left}>\r\n            <div className={s.window}>\r\n                <div className={s.top_string}>\r\n                    <div className={s.max_value}> max value:\r\n                        <div className={maxValue < 0 ? s.arrowRed : s.arrow}>\r\n                            <span className={s.top_arrow} onClick={maxValueUp}></span>\r\n                            <span className={s.bottom_arrow} onClick={maxValueDown}></span>\r\n                            <span className={maxValue < 0 ? s.position_B : s.position_A}>{maxValue}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.bottom_string}>\r\n                    <div className={s.max_value}> start value:\r\n                        <div className={props.startValue < 0 ? s.arrowRed : s.arrow}>\r\n                            <span className={s.top_arrow} onClick={startValueUp}></span>\r\n                            <span className={s.bottom_arrow} onClick={startValueDown}></span>\r\n                            <span className={props.startValue < 0 ? s.position_B : s.position_A}>{props.startValue}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.window_button}>\r\n                <button className={props.startValue < 0 || maxValue < 0 ? s.unSet : s.set} onClick={setButton}>set</button>\r\n            </div>\r\n\r\n        </div>\r\n        <div className={s.right}>\r\n            <div\r\n\r\n                className={props.state === maxValue && maxValue !== 0 && text ? s.red : s.title}>{!text && props.startValue < 0 ? 'negative value ' : !text ? \"click on the 'set'\" : props.state}</div>\r\n            <div className={s.obert}>\r\n                <div className={s.items}>\r\n                    <button className={props.state > -1 && text ? s.inc : s.op} onClick={() => {props.addNumber()\r\n                    }}>inc\r\n                    </button>\r\n                    <button className={props.state !== props.startValue && props.startValue > -1 && text ? s.reset : s.opasity}\r\n                            onClick={() => {\r\n                                props.reset(props.startValue)\r\n                            }}>reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect} from 'react';\nimport './App.module.css';\nimport {Counter} from \"./Counter\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addNumberAc, resetAc, setMaxNumberOutOfLocalStorageAC, setMinNumberOutOfLocalStorageAC,} from \"./bll/reduser\";\nimport {appStateType} from \"./bll/store\";\n\nfunction App() {\n\n\n    let value = useSelector<appStateType, number>(state => state.counterReduser.value)\n    const text = useSelector<appStateType, boolean>(state => state.counterReduser.text)\n    let maxValue = useSelector<appStateType, number>(state => state.counterReduser.maxValue)\n    const startValue = useSelector<appStateType, number>(state => state.counterReduser.startValue)\n    let dispatch = useDispatch()\n\n\n    const addNumber = () => {\n        if (text && maxValue > value) {\n            dispatch(addNumberAc())\n        }\n\n    }\n\n\n    const reset = (startValue: number) => {\n        if (text) {\n            dispatch(resetAc(startValue))\n        }\n\n    }\n\n    // const addStartValueToInc = (startValue: number) => {\n    //     dispatch(addStartValueToInc(startValue))\n    // }\n    const locStorValue = () => {\n        localStorage.setItem('maxValue', maxValue.toString())\n        localStorage.setItem('startValue', startValue.toString())\n    }\n\n    useEffect(() => {\n        let startValue = localStorage.getItem('startValue')\n        if (startValue) {\n            let parseMinValue = JSON.parse(startValue)\n            dispatch(setMinNumberOutOfLocalStorageAC(parseMinValue))\n        }\n        let maxValue = localStorage.getItem('maxValue')\n        if (maxValue) {\n            let parseMaxValue = JSON.parse(maxValue)\n            dispatch(setMaxNumberOutOfLocalStorageAC(parseMaxValue))\n        }\n    }, [])\n    return (\n        <div className=\"App\">\n            <Counter\n                state={value}\n                reset={reset}\n                text={text}\n                addNumber={addNumber}\n                locStorValue={locStorValue}\n                maxValue={maxValue}\n                startValue={startValue}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {counterReduser} from \"./reduser\";\r\n\r\n\r\nlet reduser = combineReducers({\r\n    counterReduser\r\n})\r\n\r\nexport type appStateType = ReturnType<typeof reduser>\r\n\r\nexport let store = createStore(reduser)\r\n\r\n\r\n\r\n\r\nexport type appStoreType = typeof store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport { store } from './bll/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n\n          <App />\n      </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}