{"version":3,"sources":["App.module.css","Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter","props","useState","maxValue","setmaxValue","startValue","setstartValue","text","setText","useEffect","valueAsString","localStorage","getItem","newValue","JSON","parse","className","s","wrapper","left","window","top_string","max_value","arrowRed","arrow","top_arrow","onClick","bottom_arrow","position_B","position_A","bottom_string","window_button","unSet","set","addStartValueToInc","setItem","toString","right","state","red","title","obert","items","inc","op","addNumber","reset","opasity","App","setState","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8ce39ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1Ub_9\",\"right\":\"App_right__1_PuZ\",\"title\":\"App_title__2sWU3\",\"obert\":\"App_obert__3btd9\",\"items\":\"App_items__1e26s\",\"inc\":\"App_inc__1jHDf\",\"reset\":\"App_reset__1IH0T\",\"red\":\"App_red__CXznE\",\"op\":\"App_op__1FV5v\",\"opasity\":\"App_opasity__1w1Dp\",\"left\":\"App_left__1fxuU\",\"window\":\"App_window__LvrWS\",\"window_button\":\"App_window_button__2GH7Y\",\"set\":\"App_set__x7yTC\",\"unSet\":\"App_unSet__2-9TK\",\"max_value\":\"App_max_value__2QWxY\",\"arrowRed\":\"App_arrowRed__1wnAG\",\"bottom_arrow\":\"App_bottom_arrow__3sqDd\",\"top_arrow\":\"App_top_arrow__SpAvp\",\"arrow\":\"App_arrow__2PytX\",\"position_A\":\"App_position_A__3qUO1\",\"position_B\":\"App_position_B__2lDJc\"};","import s from './App.module.css'\r\nimport {useEffect, useState} from \"react\";\r\n\r\n//test\r\n\r\nexport type CounterType = {\r\n    title: number\r\n    addNumber: (value: number) => void\r\n    state: number\r\n    reset: (startValue: number) => void\r\n    addStartValueToInc: (startValue: number) => void\r\n}\r\nexport const Counter = (props: CounterType) => {\r\n    let [maxValue, setmaxValue] = useState(0)\r\n    let [startValue, setstartValue] = useState(0)\r\n    let [text, setText] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let valueAsString = localStorage.getItem('startValue')\r\n        if (valueAsString) {\r\n            let newValue = JSON.parse(valueAsString)\r\n            setstartValue(newValue)\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        let valueAsString = localStorage.getItem('maxValue')\r\n        if (valueAsString) {\r\n            let newValue = JSON.parse(valueAsString)\r\n            setmaxValue(newValue)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const locStorValue = () => {\r\n        localStorage.setItem('maxValue', maxValue.toString())\r\n        localStorage.setItem('startValue', startValue.toString())\r\n    }\r\n\r\n\r\n    const maxValueUp = () => {\r\n        if (maxValue + 1 > startValue) {\r\n            setmaxValue(maxValue + 1)\r\n            setText(true)\r\n        }\r\n\r\n    }\r\n    const maxValueDown = () => {\r\n        if (maxValue - 1 > startValue) {\r\n            setmaxValue(maxValue - 1)\r\n            setText(true)\r\n        }\r\n    }\r\n\r\n    const startValueUp = () => {\r\n        if (maxValue > (startValue + 1)) {\r\n            setstartValue(startValue + 1)\r\n            setText(true)\r\n        }\r\n\r\n    }\r\n    const startValueDown = () => {\r\n        if (maxValue > (startValue - 1)) {\r\n            setstartValue(startValue - 1)\r\n            setText(true)\r\n        }\r\n    }\r\n\r\n\r\n    const setButton = () => {\r\n        setText(false)\r\n        props.addStartValueToInc(startValue)\r\n        locStorValue()\r\n    }\r\n\r\n    return <div className={s.wrapper}>\r\n\r\n        <div className={s.left}>\r\n            <div className={s.window}>\r\n                <div className={s.top_string}>\r\n                    <div className={s.max_value}> max value:\r\n                        <div className={maxValue < 0 ? s.arrowRed : s.arrow}>\r\n                            <span className={s.top_arrow} onClick={maxValueUp}></span>\r\n                            <span className={s.bottom_arrow} onClick={maxValueDown}></span>\r\n                            <span className={maxValue < 0 ? s.position_B : s.position_A}>{maxValue}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.bottom_string}>\r\n                    <div className={s.max_value}> start value:\r\n                        <div className={startValue < 0 ? s.arrowRed : s.arrow}>\r\n                            <span className={s.top_arrow} onClick={startValueUp}></span>\r\n                            <span className={s.bottom_arrow} onClick={startValueDown}></span>\r\n                            <span className={startValue < 0 ? s.position_B : s.position_A}>{startValue}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.window_button}>\r\n                <button className={startValue < 0 || maxValue < 0 ? s.unSet : s.set} onClick={setButton}>set</button>\r\n            </div>\r\n\r\n        </div>\r\n        <div className={s.right}>\r\n            <div\r\n\r\n                 className={props.state === maxValue && maxValue !== 0 ? s.red : s.title}>{text && startValue < 0 ? 'negative value ' : text ? \"click on the 'set'\" : props.state}</div>\r\n            <div className={s.obert}>\r\n                <div className={s.items}>\r\n                    <button className={props.state > -1 && !text ? s.inc : s.op} onClick={() => {\r\n                        props.addNumber(maxValue)\r\n                    }}>inc\r\n                    </button>\r\n                    <button className={props.state !== startValue && startValue > -1 ? s.reset : s.opasity}\r\n                            onClick={() => {\r\n                                props.reset(startValue)\r\n                            }}>reset\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React, {useState} from 'react';\nimport './App.module.css';\nimport {Counter} from \"./Counter\";\n\nfunction App() {\n    let [state, setState] = useState<number>(0)\n\n\n    const addNumber = (value: number) => {\n        if (state !== value) {\n            setState(state + 1)\n        }\n    }\n    const reset = (startValue: number) => {\n        if (state > 0) {\n            setState(startValue)\n        }\n    }\n\n    const addStartValueToInc = (startValue: number) => {\n        if (startValue >= 0) {\n            state = startValue\n            setState(state)\n        }\n\n    }\n\n    return (\n        <div className=\"App\">\n\n            <Counter\n                state={state}\n                reset={reset}\n                title={0}\n                addNumber={addNumber}\n                addStartValueToInc={addStartValueToInc}\n\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}